#
# Define which protocol versions mountd
# will advertise. The values are "no" or "yes"
# with yes being the default
MOUNTD_NFS_V2="<%= nfs_v2_enable %>"
#MOUNTD_NFS_V3="no"
#
#
# Path to remote quota server. See rquotad(8)
#RQUOTAD="/usr/sbin/rpc.rquotad"
# Port rquotad should listen on.
#RQUOTAD_PORT=875
# Optinal options passed to rquotad
#RPCRQUOTADOPTS=""
#
#
# Optional arguments passed to in-kernel lockd
#LOCKDARG=
# TCP port rpc.lockd should listen on.
#LOCKD_TCPPORT=32803
# UDP port rpc.lockd should listen on.
#LOCKD_UDPPORT=32769
#
#
# Optional arguments passed to rpc.nfsd. See rpc.nfsd(8)
# Turn off v2 and v3 protocol support
RPCNFSDARGS="<%= rpcnfsdargs %>"
#RPCNFSDARGS="-N 2 -N 3"
# Turn off v4 protocol support
#RPCNFSDARGS="-N 4"
# Number of nfs server processes to be started.
# The default is 8.
#RPCNFSDCOUNT=8
# Stop the nfsd module from being pre-loaded
#NFSD_MODULE="noload"
# Set V4 grace period in seconds
#NFSD_V4_GRACE=90
#
#
#
# Optional arguments passed to rpc.mountd. See rpc.mountd(8)
<% rpcmountd_opts = scope['nfs::client::rpcmountd_opts'] -%>
<% rpcmountd_opts = '' if rpcmountd_opts.nil? || rpcmountd_opts == :undef || rpcmountd_opts.to_s.empty? -%>
RPCMOUNTDOPTS="<%= rpcmountd_opts %>"
# Port rpc.mountd should listen on.
#MOUNTD_PORT=892
#
#
# Optional arguments passed to rpc.statd. See rpc.statd(8)
#STATDARG=""
# Port rpc.statd should listen on.
#STATD_PORT=662
# Outgoing port statd should used. The default is port
# is random
#STATD_OUTGOING_PORT=2020
# Specify callout program
#STATD_HA_CALLOUT="/usr/local/bin/foo"
#
#
# Optional arguments passed to rpc.idmapd. See rpc.idmapd(8)
<% rpcidmapd_opts = scope['nfs::client::rpcidmapd_opts'] -%>
<% rpcidmapd_opts = '' if rpcidmapd_opts.nil? || rpcidmapd_opts == :undef || rpcidmapd_opts.to_s.empty? -%>
RPCIDMAPDARGS="<%= rpcidmapd_opts %>"
#
# Set to turn on Secure NFS mounts.
<% nfs_v4_secure = scope['nfs_v4_secure'] -%>
<% nfs_v4_secure = '' if nfs_v4_secure.nil? || nfs_v4_secure == :undef || nfs_v4_secure.to_s.empty? -%>
SECURE_NFS="<%= nfs_v4_secure %>"
# Optional arguments passed to rpc.gssd. See rpc.gssd(8)
<% rpcgssd_opts = scope['nfs::client::rpcgssd_opts'] -%>
<% rpcgssd_opts = '' if rpcgssd_opts.nil? || rpcgssd_opts == :undef || rpcgssd_opts.to_s.empty? -%>
RPCGSSDARGS="<%= rpcgssd_opts %>"
# Optional arguments passed to rpc.svcgssd. See rpc.svcgssd(8)
<% rpcsvcgssd_opts = scope['nfs::client::rpcsvcgssd_opts'] -%>
<% rpcsvcgssd_opts = '' if rpcsvcgssd_opts.nil? || rpcsvcgssd_opts == :undef || rpcsvcgssd_opts.to_s.empty? -%>
RPCSVCGSSDARGS="<%= rpcsvcgssd_opts %>"
#
# To enable RDMA support on the server by setting this to
# the port the server should listen on
#RDMA_PORT=20049
